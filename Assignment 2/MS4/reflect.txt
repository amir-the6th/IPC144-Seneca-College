When I look through the lines of codes I have written this week and in this assignment, I am amazed by the fact that how far did I get with programming in C language. I probably cannot perform this efficient again if I want to work on another project, as there were a lot of instructions that lightened the path for me; but I think I will be capable to accomplish this if I work more on project management and the ways I can ease the burden of a big project's tasks, rather than enriching my programming knowledge. I reckon that I still lag at pointers, structures, and functions when they mix, not individually. I will do my best in this short period off before the next semester is begun and will work on the weak spots, so I'm well prepared for the C++ course.
 
The findContactIndex function is for checking whether the cell phone number entered matches the phone number of one of the contacts. The function itself does a very easy job but its use is vast; what it does is, it compares the cell number entered with the phone numbers stored in the contacts array one by one, using the strcmp. If they match, the strcmp returns 0, and our if statement is true if the result of the comparison is 0; then, the value of i, that is everything between 0 to the value of size, is returned. When we call the function later in the project, we check if the value returned from findContactIndex is -1 or not; if it is, then it means that the cell number entered does not match any of the numbers in the contacts.
 
The getTenDigitPhone function is for preventing the user from entering a less than or more than 10 characters and from entering a non-numerical data. That desire is satisfied by using isdigit() and strlen() function. I declared a for loop so every time isdigit checks a character, the value of the integer number is incremented by one if it is numerical; then, later on in getTenDigitPhone function, if the value of 'number' equals to 10, that means all the characters that the user prompted are numerical. Checking that the entered information is exactly 10 characters was already done, and it has a very simple logic. The strlen() function checks the length of the array and returns 'true' if it has exactly 10 characters. I called the getTenDigitPhone function so many times in my code and having the function declared somewhere else and call it when it's needed, made it much easier to read the code and prevented the repetition of the same thing multiple times.
 
That would have made it so much fun to save the contact information in a file and use it later in the project; shame that we weren't taught the basics of Files earlier. So far, we have used the main memory (RAM) to keep our information; as we know, RAM is a volatile memory, and that means the information is stored in the memory temporarily and it will be erased when the RAM is restarted or turned off. To prevent data loss and to store our information permanently, we use files, which can be stored in internal or external disk drives; this way, our application and our program are practical. Data stored in files can be retrieved by the program when it's needed. By understanding the concept of file handling, we can smooth our projects and we can receive, read, and write data coming in from any external source. Using files also saves us some time; in the programs that require a lot of input from the user, including our assignment, we can easily access any part of the code with the help of files-related commands. Added to the previous advantages mentioned, another benefit of using files is that we can transfer the contents of the file from one system to another with no worries of data loss.
