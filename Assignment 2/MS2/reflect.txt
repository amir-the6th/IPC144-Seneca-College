What a great, though intensive, week for me! Receiving more information on C strings and getting more familiar with the correct syntax, this week was a lot easier for me to handle; Although the amount of work needed for assignment2 was way more than the assignment1, it was simpler to comprehend as I watched the week8 tutorials. Week 7 was a chaotic week for me as I didn't know anything about C strings; I got confused by the instructions in the assignment1 file and took me a while to comprehend the question.
In the assignment1, I created a function that did the same thing as 'clearKeyboard' function in assignment2. I wanted to force the program to receive input from the user until the Enter button is pressed. I found about this function in the Stack Overflow website, so I technically wasn't fully aware of the purpose behind this function; I didn't know anything about input buffer. This week, when I watched the "Buffered Input, Formatted vs Unformatted" video, I got the answer to my Why question. I understood the concept of allocating memory and how characters allocate a specific part of the memory bytes to themselves. 
This week, added to the C strings-related videos, I searched a little more about functions and pointers as I was still lagging understanding them and using them. A function is a block of statements that performs a specific task. Every C source code has at least one function and that is main(). Additional functions can be created with special duties and tasks to do. Those functions, later in the code and probably in the main function, can be called to do their job and return, or not, the desired value. Functions are highly needed for projects; not maybe for the smaller projects, but big projects would be inefficient, long, repetitive, and boring if functions were not used in them. Functions reduce the need for typing a, for example, while loop that clears the input buffer over and over when needed in the code. Or let's say, we want to ask the user to prompt a 'y', 'Y', 'n', or 'N' character for an asked question and run other parts of the code based on the given answer; tackling that task is much harder than it seems. Instead of writing 20 lines of codes every time we want to do this, we just do it once and save it in a function called "yes" and call the function every other time that this task needs to be done.
My answer to why "helper" functions were written in a different module and not in the "contacts" module is that if we do this, we can use the functions in any other project in the future. If we did this in the same module, we weren't able to use those functions in another project. So why take the bother to rewrite the functions when we can simply save them in another module and use then whenever and wherever needed.
